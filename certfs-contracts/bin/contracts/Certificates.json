{
    "contractName": "Certificates",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_defaultAdmin",
                    "type": "address"
                },
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "_royaltyRecipient",
                    "type": "address"
                },
                {
                    "internalType": "uint128",
                    "name": "_royaltyBps",
                    "type": "uint128"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "ApprovalCallerNotOwnerNorApproved",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ApprovalQueryForNonexistentToken",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ApprovalToCurrentOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ApproveToCaller",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "BalanceQueryForZeroAddress",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MintToZeroAddress",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MintZeroQuantity",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "OwnerQueryForNonexistentToken",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TransferCallerNotOwnerNorApproved",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TransferFromIncorrectOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TransferToNonERC721ReceiverImplementer",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TransferToZeroAddress",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "URIQueryForNonexistentToken",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_fromTokenId",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_toTokenId",
                    "type": "uint256"
                }
            ],
            "name": "BatchMetadataUpdate",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "prevURI",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "newURI",
                    "type": "string"
                }
            ],
            "name": "ContractURIUpdated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newRoyaltyRecipient",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "newRoyaltyBps",
                    "type": "uint256"
                }
            ],
            "name": "DefaultRoyalty",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "MetadataFrozen",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "prevOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnerUpdated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "royaltyRecipient",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "royaltyBps",
                    "type": "uint256"
                }
            ],
            "name": "RoyaltyForToken",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "batchFrozen",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_quantity",
                    "type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "_baseURI",
                    "type": "string"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "batchMintTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "contractURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBaseURICount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_index",
                    "type": "uint256"
                }
            ],
            "name": "getBatchIdAtIndex",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "studentEmail",
                    "type": "string"
                }
            ],
            "name": "getCertificateByStudentEmail",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "institution",
                    "type": "address"
                },
                {
                    "internalType": "string",
                    "name": "institutionName",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "studentName",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "degree",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "cidHash",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getDefaultRoyaltyInfo",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint16",
                    "name": "",
                    "type": "uint16"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getRoyaltyInfoForToken",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint16",
                    "name": "",
                    "type": "uint16"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_operator",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "isApprovedOrOwner",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "isApprovedOrOwnerOf",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "studentName",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "institutionName",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "degree",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "studentEmail",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "cidHash",
                    "type": "string"
                }
            ],
            "name": "issueCertificate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "string",
                    "name": "_tokenURI",
                    "type": "string"
                }
            ],
            "name": "mintTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes[]",
                    "name": "data",
                    "type": "bytes[]"
                }
            ],
            "name": "multicall",
            "outputs": [
                {
                    "internalType": "bytes[]",
                    "name": "results",
                    "type": "bytes[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "nextTokenIdToMint",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "salePrice",
                    "type": "uint256"
                }
            ],
            "name": "royaltyInfo",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "royaltyAmount",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_uri",
                    "type": "string"
                }
            ],
            "name": "setContractURI",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_royaltyRecipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_royaltyBps",
                    "type": "uint256"
                }
            ],
            "name": "setDefaultRoyaltyInfo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_newOwner",
                    "type": "address"
                }
            ],
            "name": "setOwner",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_bps",
                    "type": "uint256"
                }
            ],
            "name": "setRoyaltyInfoForToken",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"studentEmail\",\"type\":\"string\"}],\"name\":\"getCertificateByStudentEmail\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"institutionName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"studentName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"degree\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cidHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"studentName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"institutionName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"degree\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"studentEmail\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cidHash\",\"type\":\"string\"}],\"name\":\"issueCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"MetadataFrozen()\":{\"details\":\"This event emits when the metadata of all tokens are frozen. While not currently supported by marketplaces, this event allows future indexing if desired.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchMintTo(address,uint256,string,bytes)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_data\":\"Additional data to pass along during the minting of the NFT.\",\"_quantity\":\"The number of NFTs to mint.\",\"_to\":\"The recipient of the NFT to mint.\"}},\"burn(uint256)\":{\"details\":\"ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\",\"params\":{\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedOrOwner(address,uint256)\":{\"params\":{\"_operator\":\"The address to check.\",\"_tokenId\":\"The tokenId of the NFT to check.\"},\"returns\":{\"isApprovedOrOwnerOf\":\"Whether the given address is approved to transfer the given NFT.\"}},\"mintTo(address,string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_to\":\"The recipient of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFT minted.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See `BatchMintMetadata` for handling of metadata in this contract.\",\"params\":{\"_tokenId\":\"The tokenId of an NFT.\"}},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"}},\"kind\":\"user\",\"methods\":{\"batchMintTo(address,uint256,string,bytes)\":{\"notice\":\"Lets an authorized address mint multiple NFTs at once to a recipient.\"},\"burn(uint256)\":{\"notice\":\"Lets an owner or approved operator burn the NFT of the given tokenId.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"mintTo(address,string)\":{\"notice\":\"Lets an authorized address mint an NFT to a recipient.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the metadata URI for an NFT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/contracts/cert.sol\":\"Certificates\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/contracts/cert.sol\":{\"keccak256\":\"0xe2912d523257791e2165a70a7711b0d1bdf8834fffb5d80b485bdae2314a2732\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8294ab7db5c542d12c278d5b740249a3645a7ee1e2807c0b28ba56ab8b94d7b4\",\"dweb:/ipfs/QmR7mknN155Fa6jHXtZm9f1kzLPe61YjpQsD9aqUYFkyMx\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol\":{\"keccak256\":\"0x14ed29d51519d2c1d9d175f924b01408bd5e31449b6cf1814d6b879af838042e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a6059478a5c10426d139c2a674300135921927ee0d322582fba0625882f34ea\",\"dweb:/ipfs/QmesLYAngRgJJPzLFMsKfgueTBTmFHREv6si6BsRNiqyu9\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/ERC721AVirtualApprove.sol\":{\"keccak256\":\"0xbc6fe5974d321406155a86d7f29748cad13fe632b5012e2d4979ccf238538516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80796f25af8c6507cd1f663c040d4e0c4b09f9d03544b50ead0d36cbbd5ea22\",\"dweb:/ipfs/QmPA5KLaxvbLbPbovSvMMgpj3H2Kj6kUU3s2V5qsgpfqGA\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0x1d1ee64f8456dc8b4cdd096e27ac4687babd485f49a728146126744d67f25f2f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e01b0d51bdccbcce9095f606c8624926b518c1385c1349c41896236a0345ee0\",\"dweb:/ipfs/QmWHTbztwRf9Fyq4617MrVSqF8o7UXMT5nFe6epQ92N6L9\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "sourceMap": "189:1790:0:-:0;;;590:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;743:13;758:5;765:7;774:17;793:11;758:5;765:7;1891:5:3;:13;758:5:0;1891::3;:13;:::i;:::-;-1:-1:-1;1914:7:3;:17;1924:7;1914;:17;:::i;:::-;-1:-1:-1;;2127:7:3;1941:31;;-1:-1:-1;2271:26:1::1;2283:13:::0;2271:11:::1;:26::i;:::-;2307:56;2332:17:::0;-1:-1:-1;;;;;2307:56:1;::::1;:24;:56::i;:::-;-1:-1:-1::0;;821:1:0::1;811:7;:11:::0;-1:-1:-1;189:1790:0;;-1:-1:-1;;;;;;;189:1790:0;1421:172:13;1501:6;;;-1:-1:-1;;;;;1517:18:13;;;-1:-1:-1;;;;;;1517:18:13;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:14:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:14;;4870:2:22;3571:25:14;;;4852:21:22;4909:2;4889:18;;;4882:30;-1:-1:-1;;;4928:18:22;;;4921:45;4983:18;;3571:25:14;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:14;;-1:-1:-1;;;;;;3663:32:14;;;;;-1:-1:-1;;;3663:32:14;;;;;;;;3711:46;;5158:25:22;;;3711:46:14;;5146:2:22;5131:18;3711:46:14;;;;;;;3430:334;;:::o;14:177:22:-;93:13;;-1:-1:-1;;;;;135:31:22;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:840;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:22;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:22;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1136:1;1114:15;;;1110:24;;;1103:35;;;;1118:6;328:840;-1:-1:-1;;;;328:840:22:o;1173:901::-;1299:6;1307;1315;1323;1331;1384:3;1372:9;1363:7;1359:23;1355:33;1352:53;;;1401:1;1398;1391:12;1352:53;1424:40;1454:9;1424:40;:::i;:::-;1508:2;1493:18;;1487:25;1414:50;;-1:-1:-1;;;;;;1561:14:22;;;1558:34;;;1588:1;1585;1578:12;1558:34;1611:61;1664:7;1655:6;1644:9;1640:22;1611:61;:::i;:::-;1601:71;;1718:2;1707:9;1703:18;1697:25;1681:41;;1747:2;1737:8;1734:16;1731:36;;;1763:1;1760;1753:12;1731:36;;1786:63;1841:7;1830:8;1819:9;1815:24;1786:63;:::i;:::-;1776:73;;;1868:49;1913:2;1902:9;1898:18;1868:49;:::i;:::-;1960:3;1945:19;;1939:26;1858:59;;-1:-1:-1;;;;;;1994:31:22;;1984:42;;1974:70;;2040:1;2037;2030:12;1974:70;2063:5;2053:15;;;1173:901;;;;;;;;:::o;2079:380::-;2158:1;2154:12;;;;2201;;;2222:61;;2276:4;2268:6;2264:17;2254:27;;2222:61;2329:2;2321:6;2318:14;2298:18;2295:38;2292:161;;2375:10;2370:3;2366:20;2363:1;2356:31;2410:4;2407:1;2400:15;2438:4;2435:1;2428:15;2292:161;;2079:380;;;:::o;2590:545::-;2692:2;2687:3;2684:11;2681:448;;;2728:1;2753:5;2749:2;2742:17;2798:4;2794:2;2784:19;2868:2;2856:10;2852:19;2849:1;2845:27;2839:4;2835:38;2904:4;2892:10;2889:20;2886:47;;;-1:-1:-1;2927:4:22;2886:47;2982:2;2977:3;2973:12;2970:1;2966:20;2960:4;2956:31;2946:41;;3037:82;3055:2;3048:5;3045:13;3037:82;;;3100:17;;;3081:1;3070:13;3037:82;;;3041:3;;;2681:448;2590:545;;;:::o;3311:1352::-;3431:10;;-1:-1:-1;;;;;3453:30:22;;3450:56;;;3486:18;;:::i;:::-;3515:97;3605:6;3565:38;3597:4;3591:11;3565:38;:::i;:::-;3559:4;3515:97;:::i;:::-;3667:4;;3731:2;3720:14;;3748:1;3743:663;;;;4450:1;4467:6;4464:89;;;-1:-1:-1;4519:19:22;;;4513:26;4464:89;-1:-1:-1;;3268:1:22;3264:11;;;3260:24;3256:29;3246:40;3292:1;3288:11;;;3243:57;4566:81;;3713:944;;3743:663;2537:1;2530:14;;;2574:4;2561:18;;-1:-1:-1;;3779:20:22;;;3897:236;3911:7;3908:1;3905:14;3897:236;;;4000:19;;;3994:26;3979:42;;4092:27;;;;4060:1;4048:14;;;;3927:19;;3897:236;;;3901:3;4161:6;4152:7;4149:19;4146:201;;;4222:19;;;4216:26;-1:-1:-1;;4305:1:22;4301:14;;;4317:3;4297:24;4293:37;4289:42;4274:58;4259:74;;4146:201;-1:-1:-1;;;;;4393:1:22;4377:14;;;4373:22;4360:36;;-1:-1:-1;3311:1352:22:o;5012:177::-;189:1790:0;;;;;;",
    "deployedSourceMap": "189:1790:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4435:217:1;;;;;;:::i;:::-;;:::i;:::-;;2662:444;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:22;;1993:22;1975:41;;1963:2;1948:18;2662:444:1;;;;;;;;6137:98:3;;;:::i;:::-;;;;;;;:::i;7623:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3132:32:22;;;3114:51;;3102:2;3087:18;7623:200:3;2968:203:22;7170:392:3;;;;;;:::i;:::-;;:::i;1133:173:13:-;;;;;;:::i;:::-;;:::i;2290:306:3:-;2549:12;;2343:7;2533:13;:28;2290:306;;;3772:25:22;;;3760:2;3745:18;2290:306:3;3626:177:22;8462:164:3;;;;;;:::i;:::-;;:::i;1973:203:10:-;;;;;;:::i;:::-;;:::i;1421:347:14:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4586:32:22;;;4568:51;;4650:2;4635:18;;4628:34;;;;4541:18;1421:347:14;4394:274:22;829:655:0;;;;;;:::i;:::-;;:::i;1487:490::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;6154:104:1:-;6212:7;6238:13;6154:104;;8692:179:3;;;;;;:::i;:::-;;:::i;5812:87:1:-;;;;;;:::i;:::-;;:::i;6590:357::-;;;;;;:::i;:::-;;:::i;2008:381:14:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7226:32:22;;;7208:51;;7307:6;7295:19;;;7290:2;7275:18;;7268:47;7181:18;2008:381:14;7036:285:22;3087:256:14;;;;;;:::i;:::-;;:::i;5952:123:3:-;;;;;;:::i;:::-;;:::i;1655:96:10:-;1729:8;:15;1655:96;;3378:203:3;;;;;;:::i;:::-;;:::i;5213:325:1:-;;;;;;:::i;:::-;;:::i;898:43:10:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;871:86:13;944:6;;-1:-1:-1;;;;;944:6:13;871:86;;1003:188:11;;;;;;:::i;:::-;;:::i;6299:102:3:-;;;:::i;4281:288:14:-;;;;;;:::i;:::-;;:::i;7890:282:3:-;;;;;;:::i;:::-;;:::i;698:319:12:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:14:-;2599:16;;-1:-1:-1;;;;;2599:16:14;;;-1:-1:-1;;;2624:10:14;;;;2499:144;;8937:381:3;;;;;;:::i;:::-;;:::i;3520:379:1:-;;;;;;:::i;:::-;;:::i;565:34:11:-;;;:::i;8238:162:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;8358:25:3;;;8335:4;8358:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8238:162;4435:217:1;4522:10;:8;:10::i;:::-;4514:46;;;;-1:-1:-1;;;4514:46:1;;11142:2:22;4514:46:1;;;11124:21:22;11181:2;11161:18;;;11154:30;-1:-1:-1;;;11200:18:22;;;11193:53;11263:18;;4514:46:1;;;;;;;;;4570:44;4583:19;6212:7;6238:13;;6154:104;4583:19;4604:9;4570:12;:44::i;:::-;4624:21;4634:3;4639:1;4624:21;;;;;;;;;;;;:9;:21::i;:::-;4435:217;;:::o;2662:444::-;2765:4;-1:-1:-1;;;;;;;;;2800:25:1;;;;:100;;-1:-1:-1;;;;;;;;;;2875:25:1;;;2800:100;:175;;;-1:-1:-1;;;;;;;;;;2950:25:1;;;2800:175;:274;;;-1:-1:-1;;;;;;;3033:41:1;;-1:-1:-1;;;3033:41:1;2800:274;2781:293;2662:444;-1:-1:-1;;2662:444:1:o;6137:98:3:-;6191:13;6223:5;6216:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6137:98;:::o;7623:200::-;7691:7;7715:16;7723:7;7715;:16::i;:::-;7710:64;;7740:34;;-1:-1:-1;;;7740:34:3;;;;;;;;;;;7710:64;-1:-1:-1;7792:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;7792:24:3;;7623:200::o;7170:392::-;7250:13;7266:24;7282:7;7266:15;:24::i;:::-;7250:40;;7310:5;-1:-1:-1;;;;;7304:11:3;:2;-1:-1:-1;;;;;7304:11:3;;7300:48;;7324:24;;-1:-1:-1;;;7324:24:3;;;;;;;;;;;7300:48;719:10:19;-1:-1:-1;;;;;7363:21:3;;;7359:158;;7403:37;7420:5;719:10:19;8238:162:3;:::i;7403:37::-;7398:119;;7467:35;;-1:-1:-1;;;7467:35:3;;;;;;;;;;;7398:119;7527:28;7536:2;7540:7;7549:5;7527:8;:28::i;:::-;7240:322;7170:392;;:::o;1133:173:13:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:13;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;8462:164:3:-;8591:28;8601:4;8607:2;8611:7;8591:9;:28::i;1973:203:10:-;2037:7;2070:17;1729:8;:15;;1655:96;2070:17;2060:6;:27;2056:81;;2103:23;;-1:-1:-1;;;2103:23:10;;12222:2:22;2103:23:10;;;12204:21:22;12261:2;12241:18;;;12234:30;-1:-1:-1;;;12280:18:22;;;12273:43;12333:18;;2103:23:10;12020:337:22;2056:81:10;2153:8;2162:6;2153:16;;;;;;;;:::i;:::-;;;;;;;;;2146:23;;1973:203;;;:::o;1421:347:14:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:14;;-1:-1:-1;1613:66:14;;;-1:-1:-1;1755:6:14;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;829:655:0:-;1012:30;1022:10;1034:7;;1012:9;:30::i;:::-;1063:7;;1099:272;;;;;;;;1134:10;1099:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:4;1099:272;;;;;;1349:15;1099:272;;;;-1:-1:-1;1076:20:0;;;:12;:20;;;;;;;:295;;;;-1:-1:-1;;;;;;1076:295:0;-1:-1:-1;;;;;1076:295:0;;;;;;;;1099:272;;1076:20;;:295;;;;;;;;:::i;:::-;-1:-1:-1;1076:295:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1076:295:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1076:295:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1076:295:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1076:295:0;;;;;;;;;-1:-1:-1;;1076:295:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1377:24:0;;;:16;:24;;;;;:39;1404:12;1377:24;:39;:::i;:::-;;1459:6;1422:20;1443:12;1422:34;;;;;;:::i;:::-;;;;;;;;;;;;;;:43;1471:7;:9;;;:7;:9;;;:::i;:::-;;;;;;1008:476;829:655;;;;;:::o;1487:490::-;1579:19;1602:29;1635:25;1664:20;1688:21;1713:17;1738:14;1755:20;1776:12;1755:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1793:23;1819:20;;;:12;:20;;;;;1793:46;;;;;;;;-1:-1:-1;;;;;1793:46:0;;;;;;;;1755:34;;-1:-1:-1;1793:23:0;;1755:34;1819:20;1793:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1793:46:0;;;-1:-1:-1;;1793:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;1855:16;;1876:20;;;;1901:16;;;;1922:11;;;;1938:12;;;;1955:14;;;;;1855:16;;1876:20;;-1:-1:-1;1901:16:0;;-1:-1:-1;1922:11:0;-1:-1:-1;1938:12:0;;-1:-1:-1;1955:14:0;-1:-1:-1;1487:490:0;-1:-1:-1;;;;1487:490:0:o;8692:179:3:-;8825:39;8842:4;8848:2;8852:7;8825:39;;;;;;;;;;;;:16;:39::i;5812:87:1:-;5871:21;5877:8;5887:4;5871:5;:21::i;6590:357::-;6715:24;6755:13;6771:17;6779:8;6771:7;:17::i;:::-;6755:33;;6834:5;-1:-1:-1;;;;;6821:18:1;:9;-1:-1:-1;;;;;6821:18:1;;:68;;;-1:-1:-1;;;;;;8358:25:3;;;8335:4;8358:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;6855:34:1;6821:118;;;;6930:9;-1:-1:-1;;;;;6905:34:1;:21;6917:8;6905:11;:21::i;:::-;-1:-1:-1;;;;;6905:34:1;;6821:118;6798:142;6590:357;-1:-1:-1;;;;6590:357:1:o;2008:381:14:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:14;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:14;;;-1:-1:-1;;;2295:10:14;;;;2211:171;2192:190;;;;;2008:381;;;:::o;3087:256::-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:14;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;5952:123:3:-;6016:7;6042:21;6055:7;6042:12;:21::i;:::-;:26;;5952:123;-1:-1:-1;;5952:123:3:o;3378:203::-;3442:7;-1:-1:-1;;;;;3465:19:3;;3461:60;;3493:28;;-1:-1:-1;;;3493:28:3;;;;;;;;;;;3461:60;-1:-1:-1;;;;;;3546:19:3;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;3546:27:3;;3378:203::o;5213:325:1:-;5381:10;:8;:10::i;:::-;5373:46;;;;-1:-1:-1;;;5373:46:1;;11142:2:22;5373:46:1;;;11124:21:22;11181:2;11161:18;;;11154:30;-1:-1:-1;;;11200:18:22;;;11193:53;11263:18;;5373:46:1;10940:347:22;5373:46:1;5429:60;5448:19;6212:7;6238:13;;6154:104;5448:19;5469:9;5480:8;5429:18;:60::i;:::-;;;5499:32;5509:3;5514:9;5525:5;5499:9;:32::i;:::-;5213:325;;;;:::o;1003:188:11:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:11;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6299:102:3:-;6355:13;6387:7;6380:14;;;;;:::i;4281:288:14:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:14;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;7890:282:3:-;719:10:19;-1:-1:-1;;;;;7988:24:3;;;7984:54;;8021:17;;-1:-1:-1;;;8021:17:3;;;;;;;;;;;7984:54;719:10:19;8049:32:3;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8049:42:3;;;;;;;;;;;;:53;;-1:-1:-1;;8049:53:3;;;;;;;;;;8117:48;;1975:41:22;;;8049:42:3;;719:10:19;8117:48:3;;1948:18:22;8117:48:3;;;;;;;7890:282;;:::o;698:319:12:-;775:22;831:4;-1:-1:-1;;;;;819:24:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:12;;-1:-1:-1;;;922:54:12:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;8937:381:3:-;9098:28;9108:4;9114:2;9118:7;9098:9;:28::i;:::-;-1:-1:-1;;;;;9140:13:3;;1427:19:20;:23;9136:176:3;;9174:56;9205:4;9211:2;9215:7;9224:5;9174:30;:56::i;:::-;9169:143;;9257:40;;-1:-1:-1;;;9257:40:3;;;;;;;;;;;3520:379:1;3619:29;3651:17;;;:7;:17;;;;;3619:49;;3594:13;;3619:29;3651:17;3619:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3714:1;3688:15;3682:29;:33;3678:86;;;3738:15;3520:379;-1:-1:-1;;3520:379:1:o;3678:86::-;3774:22;3799:21;3811:8;3799:11;:21::i;:::-;3774:46;;3861:8;3871:19;:8;:17;:19::i;:::-;3844:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3830:62;;;;3520:379;;;:::o;565:34:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7868:102:1:-;7919:4;7956:7;944:6:13;;-1:-1:-1;;;;;944:6:13;;871:86;7956:7:1;-1:-1:-1;;;;;7942:21:1;:10;-1:-1:-1;;;;;7942:21:1;;7935:28;;7868:102;:::o;7360:202::-;7466:17;;;;:7;:17;;;;;7460:31;;;;;:::i;:::-;:36;;-1:-1:-1;7452:64:1;;;;-1:-1:-1;;;7452:64:1;;16923:2:22;7452:64:1;;;16905:21:22;16962:2;16942:18;;;16935:30;-1:-1:-1;;;16981:18:22;;;16974:45;17036:18;;7452:64:1;16721:339:22;7452:64:1;7526:17;;;;:7;:17;;;;;:29;7546:9;7526:17;:29;:::i;10277:1708:3:-;10395:20;10418:13;-1:-1:-1;;;;;10445:16:3;;10441:48;;10470:19;;-1:-1:-1;;;10470:19:3;;;;;;;;;;;10441:48;10503:8;10515:1;10503:13;10499:44;;10525:18;;-1:-1:-1;;;10525:18:3;;;;;;;;;;;10499:44;-1:-1:-1;;;;;10886:16:3;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;10944:49:3;;-1:-1:-1;;;;;10886:44:3;;;;;;;10944:49;;;;-1:-1:-1;;10886:44:3;;;;;;10944:49;;;;;;;;;;;;;;;;11008:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11057:66:3;;;-1:-1:-1;;;11107:15:3;11057:66;;;;;;;;;;;;;11008:25;;11201:23;;;;1427:19:20;:23;11239:618:3;;11278:308;11308:38;;11333:12;;-1:-1:-1;;;;;11308:38:3;;;11325:1;;-1:-1:-1;;;;;;;;;;;11308:38:3;11325:1;;11308:38;11373:69;11412:1;11416:2;11420:14;;;;;;11436:5;11373:30;:69::i;:::-;11368:172;;11477:40;;-1:-1:-1;;;11477:40:3;;;;;;;;;;;11368:172;11581:3;11566:12;:18;11278:308;;11665:12;11648:13;;:29;11644:43;;11679:8;;;11644:43;11239:618;;;11726:117;11756:40;;11781:14;;;;;-1:-1:-1;;;;;11756:40:3;;;11773:1;;-1:-1:-1;;;;;;;;;;;11756:40:3;11773:1;;11756:40;11838:3;11823:12;:18;11726:117;;11239:618;-1:-1:-1;11870:13:3;:28;;;11918:60;;11951:2;11955:12;11969:8;11918:60;:::i;9564:172::-;9621:4;9684:13;;9674:7;:23;9644:85;;;;-1:-1:-1;;9702:20:3;;;;:11;:20;;;;;:27;-1:-1:-1;;;9702:27:3;;;;9701:28;;9564:172::o;18545:189::-;18655:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;18655:29:3;-1:-1:-1;;;;;18655:29:3;;;;;;;;;18699:28;;18655:24;;18699:28;;;;;;;18545:189;;;:::o;1421:172:13:-;1501:6;;;-1:-1:-1;;;;;1517:18:13;;;-1:-1:-1;;;;;;1517:18:13;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;13620:2082:3:-;13730:35;13768:21;13781:7;13768:12;:21::i;:::-;13730:59;;13826:4;-1:-1:-1;;;;;13804:26:3;:13;:18;;;-1:-1:-1;;;;;13804:26:3;;13800:67;;13839:28;;-1:-1:-1;;;13839:28:3;;;;;;;;;;;13800:67;13878:22;719:10:19;-1:-1:-1;;;;;13904:20:3;;;;:72;;-1:-1:-1;13940:36:3;13957:4;719:10:19;8238:162:3;:::i;13940:36::-;13904:124;;;-1:-1:-1;719:10:19;13992:20:3;14004:7;13992:11;:20::i;:::-;-1:-1:-1;;;;;13992:36:3;;13904:124;13878:151;;14045:17;14040:66;;14071:35;;-1:-1:-1;;;14071:35:3;;;;;;;;;;;14040:66;-1:-1:-1;;;;;14120:16:3;;14116:52;;14145:23;;-1:-1:-1;;;14145:23:3;;;;;;;;;;;14116:52;14284:35;14301:1;14305:7;14314:4;14284:8;:35::i;:::-;-1:-1:-1;;;;;14609:18:3;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;14609:31:3;;;-1:-1:-1;;;;;14609:31:3;;;-1:-1:-1;;14609:31:3;;;;;;;14654:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;14654:29:3;;;;;;;;;;;14732:20;;;:11;:20;;;;;;14766:18;;-1:-1:-1;;;;;;14798:49:3;;;;-1:-1:-1;;;14831:15:3;14798:49;;;;;;;;;;15117:11;;15176:24;;;;;15218:13;;14732:20;;15176:24;;15218:13;15214:377;;15425:13;;15410:11;:28;15406:171;;15462:20;;15530:28;;;;-1:-1:-1;;;;;15504:54:3;-1:-1:-1;;;15504:54:3;-1:-1:-1;;;;;;15504:54:3;;;-1:-1:-1;;;;;15462:20:3;;15504:54;;;;15406:171;14585:1016;;;15635:7;15631:2;-1:-1:-1;;;;;15616:27:3;15625:4;-1:-1:-1;;;;;15616:27:3;-1:-1:-1;;;;;;;;;;;15616:27:3;;;;;;;;;13720:1982;;13620:2082;;;:::o;9815:102::-;9883:27;9893:2;9897:8;9883:27;;;;;;;;;;;;:9;:27::i;16079:2355::-;16158:35;16196:21;16209:7;16196:12;:21::i;:::-;16243:18;;16158:59;;-1:-1:-1;16272:284:3;;;;16305:22;719:10:19;-1:-1:-1;;;;;16331:20:3;;;;:76;;-1:-1:-1;16371:36:3;16388:4;719:10:19;8238:162:3;:::i;16371:36::-;16331:132;;;-1:-1:-1;719:10:19;16427:20:3;16439:7;16427:11;:20::i;:::-;-1:-1:-1;;;;;16427:36:3;;16331:132;16305:159;;16484:17;16479:66;;16510:35;;-1:-1:-1;;;16510:35:3;;;;;;;;;;;16479:66;16291:265;16272:284;16679:35;16696:1;16700:7;16709:4;16679:8;:35::i;:::-;-1:-1:-1;;;;;17038:18:3;;;17004:31;17038:18;;;:12;:18;;;;;;;;17070:24;;-1:-1:-1;;;;;;;;;;17070:24:3;;;;;;;;;-1:-1:-1;;17070:24:3;;;;17108:29;;;;;17093:1;17108:29;;;;;;;;-1:-1:-1;;17108:29:3;;;;;;;;;;17267:20;;;:11;:20;;;;;;17301;;-1:-1:-1;;;;17368:15:3;17335:49;;;-1:-1:-1;;;17335:49:3;-1:-1:-1;;;;;;17335:49:3;;;;;;;;;;17398:22;-1:-1:-1;;;17398:22:3;;;17686:11;;;17745:24;;;;;17787:13;;17038:18;;17745:24;;17787:13;17783:377;;17994:13;;17979:11;:28;17975:171;;18031:20;;18099:28;;;;-1:-1:-1;;;;;18073:54:3;-1:-1:-1;;;18073:54:3;-1:-1:-1;;;;;;18073:54:3;;;-1:-1:-1;;;;;18031:20:3;;18073:54;;;;17975:171;-1:-1:-1;;18185:35:3;;18212:7;;-1:-1:-1;18208:1:3;;-1:-1:-1;;;;;;18185:35:3;;;-1:-1:-1;;;;;;;;;;;18185:35:3;18208:1;;18185:35;-1:-1:-1;;18403:12:3;:14;;;;;;-1:-1:-1;;16079:2355:3:o;3430:334:14:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:14;;17267:2:22;3571:25:14;;;17249:21:22;17306:2;17286:18;;;17279:30;-1:-1:-1;;;17325:18:22;;;17318:45;17380:18;;3571:25:14;17065:339:22;3531:76:14;3617:16;:36;;-1:-1:-1;;;;;3617:36:14;;-1:-1:-1;;;;;;3663:32:14;;;;;-1:-1:-1;;;3663:32:14;;;;;;;;3711:46;;3772:25:22;;;3711:46:14;;3760:2:22;3745:18;3711:46:14;;;;;;;3430:334;;:::o;4721:1174:3:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4831:7:3;4929:13;;4922:4;:20;4918:913;;;4966:31;5000:17;;;:11;:17;;;;;;;;;4966:51;;;;;;;;;-1:-1:-1;;;;;4966:51:3;;;;-1:-1:-1;;;4966:51:3;;-1:-1:-1;;;;;4966:51:3;;;;;;;;-1:-1:-1;;;4966:51:3;;;;;;;;;;;;;;5039:774;;5092:14;;-1:-1:-1;;;;;5092:28:3;;5088:107;;5159:9;4721:1174;-1:-1:-1;;;4721:1174:3:o;5088:107::-;-1:-1:-1;;;5555:6:3;5603:17;;;;:11;:17;;;;;;;;;5591:29;;;;;;;;;-1:-1:-1;;;;;5591:29:3;;;;;-1:-1:-1;;;5591:29:3;;-1:-1:-1;;;;;5591:29:3;;;;;;;;-1:-1:-1;;;5591:29:3;;;;;;;;;;;;;5654:28;5650:115;;5725:9;4721:1174;-1:-1:-1;;;4721:1174:3:o;5650:115::-;5512:279;;;4944:887;4918:913;5857:31;;-1:-1:-1;;;5857:31:3;;;;;;;;;;;4535:362:10;4685:25;;4749:24;4760:13;4749:8;:24;:::i;:::-;4821:8;:22;;;;;;;;;;;;;-1:-1:-1;4854:16:10;;;:7;4821:22;4854:16;;;;4739:34;;-1:-1:-1;4739:34:10;;-1:-1:-1;4854:36:10;4873:17;4854:16;:36;:::i;:::-;;4535:362;;;;;;:::o;1273:185:11:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4671:362:14:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:14;;17267:2:22;4840:25:14;;;17249:21:22;17306:2;17286:18;;;17279:30;-1:-1:-1;;;17325:18:22;;;17318:45;17380:18;;4840:25:14;17065:339:22;4807:69:14;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:14;;;;;;;;;;;;;-1:-1:-1;4886:29:14;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:14;;;;;;;;;;;-1:-1:-1;4886:81:14;;;;;;;4983:43;;3772:25:22;;;4918:49:14;;4886:29;;4983:43;;3745:18:22;4983:43:14;;;;;;;4671:362;;;:::o;6538:198:20:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:20:o;19215:650:3:-;19393:72;;-1:-1:-1;;;19393:72:3;;19373:4;;-1:-1:-1;;;;;19393:36:3;;;;;:72;;719:10:19;;19444:4:3;;19450:7;;19459:5;;19393:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19393:72:3;;;;;;;;-1:-1:-1;;19393:72:3;;;;;;;;;;;;:::i;:::-;;;19389:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19624:6;:13;19641:1;19624:18;19620:229;;19669:40;;-1:-1:-1;;;19669:40:3;;;;;;;;;;;19620:229;19809:6;19803:13;19794:6;19790:2;19786:15;19779:38;19389:470;-1:-1:-1;;;;;;19511:55:3;-1:-1:-1;;;19511:55:3;;-1:-1:-1;19215:650:3;;;;;;:::o;2849:390:10:-;2911:13;2936:25;2964:17;1729:8;:15;;1655:96;2964:17;2936:45;;2991:24;3018:8;2991:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3042:9;3037:161;3061:17;3057:1;:21;3037:161;;;3117:7;3125:1;3117:10;;;;;;;;:::i;:::-;;;;;;;3106:8;:21;3102:86;;;3154:7;:19;3162:7;3170:1;3162:10;;;;;;;;:::i;:::-;;;;;;;3154:19;;;;;;;;;;;3147:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:390;;;:::o;3102:86::-;3080:6;3085:1;3080:6;;:::i;:::-;;;3037:161;;;-1:-1:-1;3207:25:10;;-1:-1:-1;;;3207:25:10;;18877:2:22;3207:25:10;;;18859:21:22;18916:2;18896:18;;;18889:30;-1:-1:-1;;;18935:18:22;;;18928:45;18990:18;;3207:25:10;18675:339:22;305:703:21;361:13;578:5;587:1;578:10;574:51;;-1:-1:-1;;604:10:21;;;;;;;;;;;;-1:-1:-1;;;604:10:21;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:21;;-1:-1:-1;750:2:21;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:21;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:21;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:21;;;;;;;;-1:-1:-1;949:11:21;958:2;949:11;;:::i;:::-;;;821:150;;6922:387:20;7063:12;-1:-1:-1;;;;;1427:19:20;;;7087:69;;;;-1:-1:-1;;;7087:69:20;;19471:2:22;7087:69:20;;;19453:21:22;19510:2;19490:18;;;19483:30;19549:34;19529:18;;;19522:62;-1:-1:-1;;;19600:18:22;;;19593:36;19646:19;;7087:69:20;19269:402:22;7087:69:20;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:20;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:20:o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:20;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:20;;;;;;;;:::i;14:173:22:-;82:20;;-1:-1:-1;;;;;131:31:22;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;-1:-1:-1;;;;;537:2:22;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:22;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:396::-;1126:6;1134;1187:2;1175:9;1166:7;1162:23;1158:32;1155:52;;;1203:1;1200;1193:12;1155:52;1226:29;1245:9;1226:29;:::i;:::-;1216:39;;1306:2;1295:9;1291:18;1278:32;-1:-1:-1;;;;;1325:6:22;1322:30;1319:50;;;1365:1;1362;1355:12;1319:50;1388;1430:7;1421:6;1410:9;1406:22;1388:50;:::i;:::-;1378:60;;;1048:396;;;;;:::o;1449:131::-;-1:-1:-1;;;;;;1523:32:22;;1513:43;;1503:71;;1570:1;1567;1560:12;1585:245;1643:6;1696:2;1684:9;1675:7;1671:23;1667:32;1664:52;;;1712:1;1709;1702:12;1664:52;1751:9;1738:23;1770:30;1794:5;1770:30;:::i;2027:250::-;2112:1;2122:113;2136:6;2133:1;2130:13;2122:113;;;2212:11;;;2206:18;2193:11;;;2186:39;2158:2;2151:10;2122:113;;;-1:-1:-1;;2269:1:22;2251:16;;2244:27;2027:250::o;2282:271::-;2324:3;2362:5;2356:12;2389:6;2384:3;2377:19;2405:76;2474:6;2467:4;2462:3;2458:14;2451:4;2444:5;2440:16;2405:76;:::i;:::-;2535:2;2514:15;-1:-1:-1;;2510:29:22;2501:39;;;;2542:4;2497:50;;2282:271;-1:-1:-1;;2282:271:22:o;2558:220::-;2707:2;2696:9;2689:21;2670:4;2727:45;2768:2;2757:9;2753:18;2745:6;2727:45;:::i;2783:180::-;2842:6;2895:2;2883:9;2874:7;2870:23;2866:32;2863:52;;;2911:1;2908;2901:12;2863:52;-1:-1:-1;2934:23:22;;2783:180;-1:-1:-1;2783:180:22:o;3176:254::-;3244:6;3252;3305:2;3293:9;3284:7;3280:23;3276:32;3273:52;;;3321:1;3318;3311:12;3273:52;3344:29;3363:9;3344:29;:::i;:::-;3334:39;3420:2;3405:18;;;;3392:32;;-1:-1:-1;;;3176:254:22:o;3435:186::-;3494:6;3547:2;3535:9;3526:7;3522:23;3518:32;3515:52;;;3563:1;3560;3553:12;3515:52;3586:29;3605:9;3586:29;:::i;3808:328::-;3885:6;3893;3901;3954:2;3942:9;3933:7;3929:23;3925:32;3922:52;;;3970:1;3967;3960:12;3922:52;3993:29;4012:9;3993:29;:::i;:::-;3983:39;;4041:38;4075:2;4064:9;4060:18;4041:38;:::i;:::-;4031:48;;4126:2;4115:9;4111:18;4098:32;4088:42;;3808:328;;;;;:::o;4141:248::-;4209:6;4217;4270:2;4258:9;4249:7;4245:23;4241:32;4238:52;;;4286:1;4283;4276:12;4238:52;-1:-1:-1;;4309:23:22;;;4379:2;4364:18;;;4351:32;;-1:-1:-1;4141:248:22:o;4673:1145::-;4818:6;4826;4834;4842;4850;4903:3;4891:9;4882:7;4878:23;4874:33;4871:53;;;4920:1;4917;4910:12;4871:53;4960:9;4947:23;-1:-1:-1;;;;;5030:2:22;5022:6;5019:14;5016:34;;;5046:1;5043;5036:12;5016:34;5069:50;5111:7;5102:6;5091:9;5087:22;5069:50;:::i;:::-;5059:60;;5172:2;5161:9;5157:18;5144:32;5128:48;;5201:2;5191:8;5188:16;5185:36;;;5217:1;5214;5207:12;5185:36;5240:52;5284:7;5273:8;5262:9;5258:24;5240:52;:::i;:::-;5230:62;;5345:2;5334:9;5330:18;5317:32;5301:48;;5374:2;5364:8;5361:16;5358:36;;;5390:1;5387;5380:12;5358:36;5413:52;5457:7;5446:8;5435:9;5431:24;5413:52;:::i;:::-;5403:62;;5518:2;5507:9;5503:18;5490:32;5474:48;;5547:2;5537:8;5534:16;5531:36;;;5563:1;5560;5553:12;5531:36;5586:52;5630:7;5619:8;5608:9;5604:24;5586:52;:::i;:::-;5576:62;;5691:3;5680:9;5676:19;5663:33;5647:49;;5721:2;5711:8;5708:16;5705:36;;;5737:1;5734;5727:12;5705:36;;5760:52;5804:7;5793:8;5782:9;5778:24;5760:52;:::i;:::-;5750:62;;;4673:1145;;;;;;;;:::o;5823:322::-;5892:6;5945:2;5933:9;5924:7;5920:23;5916:32;5913:52;;;5961:1;5958;5951:12;5913:52;6001:9;5988:23;-1:-1:-1;;;;;6026:6:22;6023:30;6020:50;;;6066:1;6063;6056:12;6020:50;6089;6131:7;6122:6;6111:9;6107:22;6089:50;:::i;6150:881::-;-1:-1:-1;;;;;6499:32:22;;6481:51;;6568:3;6563:2;6548:18;;6541:31;;;-1:-1:-1;;6595:46:22;;6621:19;;6613:6;6595:46;:::i;:::-;6689:9;6681:6;6677:22;6672:2;6661:9;6657:18;6650:50;6723:33;6749:6;6741;6723:33;:::i;:::-;6709:47;;6804:9;6796:6;6792:22;6787:2;6776:9;6772:18;6765:50;6838:33;6864:6;6856;6838:33;:::i;:::-;6824:47;;6920:9;6912:6;6908:22;6902:3;6891:9;6887:19;6880:51;6948:33;6974:6;6966;6948:33;:::i;:::-;6940:41;;;7018:6;7012:3;7001:9;6997:19;6990:35;6150:881;;;;;;;;;:::o;7326:685::-;7431:6;7439;7447;7455;7508:3;7496:9;7487:7;7483:23;7479:33;7476:53;;;7525:1;7522;7515:12;7476:53;7548:29;7567:9;7548:29;:::i;:::-;7538:39;;7624:2;7613:9;7609:18;7596:32;7586:42;;7679:2;7668:9;7664:18;7651:32;-1:-1:-1;;;;;7743:2:22;7735:6;7732:14;7729:34;;;7759:1;7756;7749:12;7729:34;7782:50;7824:7;7815:6;7804:9;7800:22;7782:50;:::i;:::-;7772:60;;7885:2;7874:9;7870:18;7857:32;7841:48;;7914:2;7904:8;7901:16;7898:36;;;7930:1;7927;7920:12;7898:36;;7953:52;7997:7;7986:8;7975:9;7971:24;7953:52;:::i;:::-;7943:62;;;7326:685;;;;;;;:::o;8016:322::-;8093:6;8101;8109;8162:2;8150:9;8141:7;8137:23;8133:32;8130:52;;;8178:1;8175;8168:12;8130:52;8214:9;8201:23;8191:33;;8243:38;8277:2;8266:9;8262:18;8243:38;:::i;8343:347::-;8408:6;8416;8469:2;8457:9;8448:7;8444:23;8440:32;8437:52;;;8485:1;8482;8475:12;8437:52;8508:29;8527:9;8508:29;:::i;:::-;8498:39;;8587:2;8576:9;8572:18;8559:32;8634:5;8627:13;8620:21;8613:5;8610:32;8600:60;;8656:1;8653;8646:12;8600:60;8679:5;8669:15;;;8343:347;;;;;:::o;8695:626::-;8792:6;8800;8853:2;8841:9;8832:7;8828:23;8824:32;8821:52;;;8869:1;8866;8859:12;8821:52;8909:9;8896:23;-1:-1:-1;;;;;8979:2:22;8971:6;8968:14;8965:34;;;8995:1;8992;8985:12;8965:34;9033:6;9022:9;9018:22;9008:32;;9078:7;9071:4;9067:2;9063:13;9059:27;9049:55;;9100:1;9097;9090:12;9049:55;9140:2;9127:16;9166:2;9158:6;9155:14;9152:34;;;9182:1;9179;9172:12;9152:34;9235:7;9230:2;9220:6;9217:1;9213:14;9209:2;9205:23;9201:32;9198:45;9195:65;;;9256:1;9253;9246:12;9195:65;9287:2;9279:11;;;;;9309:6;;-1:-1:-1;8695:626:22;;-1:-1:-1;;;;8695:626:22:o;9326:801::-;9486:4;9515:2;9555;9544:9;9540:18;9585:2;9574:9;9567:21;9608:6;9643;9637:13;9674:6;9666;9659:22;9712:2;9701:9;9697:18;9690:25;;9774:2;9764:6;9761:1;9757:14;9746:9;9742:30;9738:39;9724:53;;9812:2;9804:6;9800:15;9833:1;9843:255;9857:6;9854:1;9851:13;9843:255;;;9950:2;9946:7;9934:9;9926:6;9922:22;9918:36;9913:3;9906:49;9978:40;10011:6;10002;9996:13;9978:40;:::i;:::-;9968:50;-1:-1:-1;10076:12:22;;;;10041:15;;;;9879:1;9872:9;9843:255;;;-1:-1:-1;10115:6:22;;9326:801;-1:-1:-1;;;;;;;9326:801:22:o;10132:538::-;10227:6;10235;10243;10251;10304:3;10292:9;10283:7;10279:23;10275:33;10272:53;;;10321:1;10318;10311:12;10272:53;10344:29;10363:9;10344:29;:::i;:::-;10334:39;;10392:38;10426:2;10415:9;10411:18;10392:38;:::i;:::-;10382:48;;10477:2;10466:9;10462:18;10449:32;10439:42;;10532:2;10521:9;10517:18;10504:32;-1:-1:-1;;;;;10551:6:22;10548:30;10545:50;;;10591:1;10588;10581:12;10545:50;10614;10656:7;10647:6;10636:9;10632:22;10614:50;:::i;10675:260::-;10743:6;10751;10804:2;10792:9;10783:7;10779:23;10775:32;10772:52;;;10820:1;10817;10810:12;10772:52;10843:29;10862:9;10843:29;:::i;:::-;10833:39;;10891:38;10925:2;10914:9;10910:18;10891:38;:::i;:::-;10881:48;;10675:260;;;;;:::o;11292:380::-;11371:1;11367:12;;;;11414;;;11435:61;;11489:4;11481:6;11477:17;11467:27;;11435:61;11542:2;11534:6;11531:14;11511:18;11508:38;11505:161;;11588:10;11583:3;11579:20;11576:1;11569:31;11623:4;11620:1;11613:15;11651:4;11648:1;11641:15;11505:161;;11292:380;;;:::o;11677:338::-;11879:2;11861:21;;;11918:2;11898:18;;;11891:30;-1:-1:-1;;;11952:2:22;11937:18;;11930:44;12006:2;11991:18;;11677:338::o;12362:127::-;12423:10;12418:3;12414:20;12411:1;12404:31;12454:4;12451:1;12444:15;12478:4;12475:1;12468:15;12494:127;12555:10;12550:3;12546:20;12543:1;12536:31;12586:4;12583:1;12576:15;12610:4;12607:1;12600:15;12626:168;12699:9;;;12730;;12747:15;;;12741:22;;12727:37;12717:71;;12768:18;;:::i;12799:127::-;12860:10;12855:3;12851:20;12848:1;12841:31;12891:4;12888:1;12881:15;12915:4;12912:1;12905:15;12931:120;12971:1;12997;12987:35;;13002:18;;:::i;:::-;-1:-1:-1;13036:9:22;;12931:120::o;13182:545::-;13284:2;13279:3;13276:11;13273:448;;;13320:1;13345:5;13341:2;13334:17;13390:4;13386:2;13376:19;13460:2;13448:10;13444:19;13441:1;13437:27;13431:4;13427:38;13496:4;13484:10;13481:20;13478:47;;;-1:-1:-1;13519:4:22;13478:47;13574:2;13569:3;13565:12;13562:1;13558:20;13552:4;13548:31;13538:41;;13629:82;13647:2;13640:5;13637:13;13629:82;;;13692:17;;;13673:1;13662:13;13629:82;;;13633:3;;;13182:545;;;:::o;13903:1352::-;14029:3;14023:10;-1:-1:-1;;;;;14048:6:22;14045:30;14042:56;;;14078:18;;:::i;:::-;14107:97;14197:6;14157:38;14189:4;14183:11;14157:38;:::i;:::-;14151:4;14107:97;:::i;:::-;14259:4;;14323:2;14312:14;;14340:1;14335:663;;;;15042:1;15059:6;15056:89;;;-1:-1:-1;15111:19:22;;;15105:26;15056:89;-1:-1:-1;;13860:1:22;13856:11;;;13852:24;13848:29;13838:40;13884:1;13880:11;;;13835:57;15158:81;;14305:944;;14335:663;13129:1;13122:14;;;13166:4;13153:18;;-1:-1:-1;;14371:20:22;;;14489:236;14503:7;14500:1;14497:14;14489:236;;;14592:19;;;14586:26;14571:42;;14684:27;;;;14652:1;14640:14;;;;14519:19;;14489:236;;;14493:3;14753:6;14744:7;14741:19;14738:201;;;14814:19;;;14808:26;-1:-1:-1;;14897:1:22;14893:14;;;14909:3;14889:24;14885:37;14881:42;14866:58;14851:74;;14738:201;-1:-1:-1;;;;;14985:1:22;14969:14;;;14965:22;14952:36;;-1:-1:-1;13903:1352:22:o;15260:289::-;15391:3;15429:6;15423:13;15445:66;15504:6;15499:3;15492:4;15484:6;15480:17;15445:66;:::i;:::-;15527:16;;;;;15260:289;-1:-1:-1;;15260:289:22:o;15554:135::-;15593:3;15614:17;;;15611:43;;15634:18;;:::i;:::-;-1:-1:-1;15681:1:22;15670:13;;15554:135::o;15694:521::-;15771:4;15777:6;15837:11;15824:25;15931:2;15927:7;15916:8;15900:14;15896:29;15892:43;15872:18;15868:68;15858:96;;15950:1;15947;15940:12;15858:96;15977:33;;16029:20;;;-1:-1:-1;;;;;;16061:30:22;;16058:50;;;16104:1;16101;16094:12;16058:50;16137:4;16125:17;;-1:-1:-1;16168:14:22;16164:27;;;16154:38;;16151:58;;;16205:1;16202;16195:12;16151:58;15694:521;;;;;:::o;16220:496::-;16399:3;16437:6;16431:13;16453:66;16512:6;16507:3;16500:4;16492:6;16488:17;16453:66;:::i;:::-;16582:13;;16541:16;;;;16604:70;16582:13;16541:16;16651:4;16639:17;;16604:70;:::i;:::-;16690:20;;16220:496;-1:-1:-1;;;;16220:496:22:o;17409:125::-;17474:9;;;17495:10;;;17492:36;;;17508:18;;:::i;17539:383::-;17736:2;17725:9;17718:21;17699:4;17762:45;17803:2;17792:9;17788:18;17780:6;17762:45;:::i;:::-;17855:9;17847:6;17843:22;17838:2;17827:9;17823:18;17816:50;17883:33;17909:6;17901;17883:33;:::i;:::-;17875:41;17539:383;-1:-1:-1;;;;;17539:383:22:o;17927:489::-;-1:-1:-1;;;;;18196:15:22;;;18178:34;;18248:15;;18243:2;18228:18;;18221:43;18295:2;18280:18;;18273:34;;;18343:3;18338:2;18323:18;;18316:31;;;18121:4;;18364:46;;18390:19;;18382:6;18364:46;:::i;18421:249::-;18490:6;18543:2;18531:9;18522:7;18518:23;18514:32;18511:52;;;18559:1;18556;18549:12;18511:52;18591:9;18585:16;18610:30;18634:5;18610:30;:::i;19019:128::-;19086:9;;;19107:11;;;19104:37;;;19121:18;;:::i;19152:112::-;19184:1;19210;19200:35;;19215:18;;:::i;:::-;-1:-1:-1;19249:9:22;;19152:112::o",
    "sourcePath": "/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/contracts/cert.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.19+commit.7dd6d404"
    },
    "ast": {
        "absolutePath": "/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/contracts/cert.sol",
        "exportedSymbols": {
            "BatchMintMetadata": [
                2479
            ],
            "Certificates": [
                163
            ],
            "ContractMetadata": [
                2537
            ],
            "ERC721A": [
                1892
            ],
            "ERC721Base": [
                495
            ],
            "IContractMetadata": [
                2940
            ],
            "IERC165": [
                1904
            ],
            "IERC2981": [
                1923
            ],
            "IMulticall": [
                2954
            ],
            "IOwnable": [
                2977
            ],
            "IRoyalty": [
                3041
            ],
            "Multicall": [
                2596
            ],
            "Ownable": [
                2678
            ],
            "Royalty": [
                2917
            ],
            "TWAddress": [
                3358
            ],
            "TWStrings": [
                3561
            ]
        },
        "id": 164,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol",
                "file": "/home/rwietter/github/dev/certfs-web3/apps/web/certfs-contracts/node_modules/@thirdweb-dev/contracts/base/ERC721Base.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 164,
                "sourceUnit": 496,
                "src": "57:130:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "ERC721Base",
                            "nameLocations": [
                                "214:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 495,
                            "src": "214:10:0"
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "214:10:0"
                    }
                ],
                "canonicalName": "Certificates",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 163,
                "linearizedBaseContracts": [
                    163,
                    495,
                    2479,
                    2917,
                    3041,
                    1923,
                    2678,
                    2977,
                    2596,
                    2954,
                    2537,
                    2940,
                    1892,
                    2107,
                    2131,
                    2036,
                    519,
                    1904,
                    3063
                ],
                "name": "Certificates",
                "nameLocation": "198:12:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "canonicalName": "Certificates.Certificate",
                        "id": 21,
                        "members": [
                            {
                                "constant": false,
                                "id": 6,
                                "mutability": "mutable",
                                "name": "institution",
                                "nameLocation": "260:11:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "252:19:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 5,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "252:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 8,
                                "mutability": "mutable",
                                "name": "institutionName",
                                "nameLocation": "282:15:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "275:22:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 7,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "275:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 10,
                                "mutability": "mutable",
                                "name": "studentName",
                                "nameLocation": "308:11:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "301:18:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 9,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "301:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 12,
                                "mutability": "mutable",
                                "name": "studentEmail",
                                "nameLocation": "330:12:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "323:19:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 11,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "323:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 14,
                                "mutability": "mutable",
                                "name": "degree",
                                "nameLocation": "353:6:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "346:13:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 13,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "346:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 16,
                                "mutability": "mutable",
                                "name": "cidHash",
                                "nameLocation": "370:7:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "363:14:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 15,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "363:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 18,
                                "mutability": "mutable",
                                "name": "issued",
                                "nameLocation": "386:6:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "381:11:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 17,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "381:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 20,
                                "mutability": "mutable",
                                "name": "timestamp",
                                "nameLocation": "404:9:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 21,
                                "src": "396:17:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 19,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "396:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "Certificate",
                        "nameLocation": "236:11:0",
                        "nodeType": "StructDefinition",
                        "scope": 163,
                        "src": "229:188:0",
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "certificates",
                        "nameLocation": "452:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "420:44:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$21_storage_$",
                            "typeString": "mapping(uint256 => struct Certificates.Certificate)"
                        },
                        "typeName": {
                            "id": 25,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 22,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "428:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "420:31:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$21_storage_$",
                                "typeString": "mapping(uint256 => struct Certificates.Certificate)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 24,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                    "id": 23,
                                    "name": "Certificate",
                                    "nameLocations": [
                                        "439:11:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 21,
                                    "src": "439:11:0"
                                },
                                "referencedDeclaration": 21,
                                "src": "439:11:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Certificate_$21_storage_ptr",
                                    "typeString": "struct Certificates.Certificate"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 30,
                        "mutability": "mutable",
                        "name": "certificateEmail",
                        "nameLocation": "494:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "467:43:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                            "typeString": "mapping(uint256 => string)"
                        },
                        "typeName": {
                            "id": 29,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 27,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "475:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "467:26:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 28,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "486:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "certificateIdByEmail",
                        "nameLocation": "540:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "513:47:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                            "typeString": "mapping(string => uint256)"
                        },
                        "typeName": {
                            "id": 33,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 31,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "521:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "513:26:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string => uint256)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 32,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "531:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "579:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "563:23:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 35,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "563:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 60,
                            "nodeType": "Block",
                            "src": "807:19:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 58,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 56,
                                            "name": "tokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 36,
                                            "src": "811:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 57,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "821:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "811:11:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 59,
                                    "nodeType": "ExpressionStatement",
                                    "src": "811:11:0"
                                }
                            ]
                        },
                        "id": 61,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 49,
                                        "name": "_defaultAdmin",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38,
                                        "src": "743:13:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 50,
                                        "name": "_name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40,
                                        "src": "758:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 51,
                                        "name": "_symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42,
                                        "src": "765:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 52,
                                        "name": "_royaltyRecipient",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "774:17:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 53,
                                        "name": "_royaltyBps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "793:11:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                        }
                                    }
                                ],
                                "id": 54,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 48,
                                    "name": "ERC721Base",
                                    "nameLocations": [
                                        "732:10:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 495,
                                    "src": "732:10:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "732:73:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 38,
                                    "mutability": "mutable",
                                    "name": "_defaultAdmin",
                                    "nameLocation": "613:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 61,
                                    "src": "605:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "605:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 40,
                                    "mutability": "mutable",
                                    "name": "_name",
                                    "nameLocation": "644:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 61,
                                    "src": "630:19:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 39,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "630:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 42,
                                    "mutability": "mutable",
                                    "name": "_symbol",
                                    "nameLocation": "667:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 61,
                                    "src": "653:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 41,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "653:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 44,
                                    "mutability": "mutable",
                                    "name": "_royaltyRecipient",
                                    "nameLocation": "686:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 61,
                                    "src": "678:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 43,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "678:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "_royaltyBps",
                                    "nameLocation": "715:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 61,
                                    "src": "707:19:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "name": "uint128",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "707:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "601:128:0"
                        },
                        "returnParameters": {
                            "id": 55,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "807:0:0"
                        },
                        "scope": 163,
                        "src": "590:236:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 116,
                            "nodeType": "Block",
                            "src": "1008:476:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 75,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1022:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 76,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1026:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1022:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 77,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 36,
                                                "src": "1034:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 74,
                                            "name": "_safeMint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1142,
                                                1305
                                            ],
                                            "referencedDeclaration": 1142,
                                            "src": "1012:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 78,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1012:30:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 79,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1012:30:0"
                                },
                                {
                                    "assignments": [
                                        81
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 81,
                                            "mutability": "mutable",
                                            "name": "certId",
                                            "nameLocation": "1054:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 116,
                                            "src": "1046:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 80,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1046:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 83,
                                    "initialValue": {
                                        "id": 82,
                                        "name": "tokenId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 36,
                                        "src": "1063:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1046:24:0"
                                },
                                {
                                    "expression": {
                                        "id": 99,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 84,
                                                "name": "certificates",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 26,
                                                "src": "1076:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$21_storage_$",
                                                    "typeString": "mapping(uint256 => struct Certificates.Certificate storage ref)"
                                                }
                                            },
                                            "id": 86,
                                            "indexExpression": {
                                                "id": 85,
                                                "name": "certId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 81,
                                                "src": "1089:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1076:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Certificate_$21_storage",
                                                "typeString": "struct Certificates.Certificate storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "expression": {
                                                        "id": 88,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1134:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 89,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1138:6:0",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1134:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                {
                                                    "id": 90,
                                                    "name": "institutionName",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 65,
                                                    "src": "1171:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                {
                                                    "id": 91,
                                                    "name": "studentName",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 63,
                                                    "src": "1209:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                {
                                                    "id": 92,
                                                    "name": "studentEmail",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 69,
                                                    "src": "1244:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                {
                                                    "id": 93,
                                                    "name": "degree",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 67,
                                                    "src": "1274:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                {
                                                    "id": 94,
                                                    "name": "cidHash",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 71,
                                                    "src": "1299:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                {
                                                    "hexValue": "74727565",
                                                    "id": 95,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1324:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                {
                                                    "expression": {
                                                        "id": 96,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967292,
                                                        "src": "1349:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 97,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1355:9:0",
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1349:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "id": 87,
                                                "name": "Certificate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21,
                                                "src": "1099:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_Certificate_$21_storage_ptr_$",
                                                    "typeString": "type(struct Certificates.Certificate storage pointer)"
                                                }
                                            },
                                            "id": 98,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "nameLocations": [
                                                "1121:11:0",
                                                "1154:15:0",
                                                "1196:11:0",
                                                "1230:12:0",
                                                "1266:6:0",
                                                "1290:7:0",
                                                "1316:6:0",
                                                "1338:9:0"
                                            ],
                                            "names": [
                                                "institution",
                                                "institutionName",
                                                "studentName",
                                                "studentEmail",
                                                "degree",
                                                "cidHash",
                                                "issued",
                                                "timestamp"
                                            ],
                                            "nodeType": "FunctionCall",
                                            "src": "1099:272:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                "typeString": "struct Certificates.Certificate memory"
                                            }
                                        },
                                        "src": "1076:295:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Certificate_$21_storage",
                                            "typeString": "struct Certificates.Certificate storage ref"
                                        }
                                    },
                                    "id": 100,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1076:295:0"
                                },
                                {
                                    "expression": {
                                        "id": 105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 101,
                                                "name": "certificateEmail",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 30,
                                                "src": "1377:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                                    "typeString": "mapping(uint256 => string storage ref)"
                                                }
                                            },
                                            "id": 103,
                                            "indexExpression": {
                                                "id": 102,
                                                "name": "certId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 81,
                                                "src": "1394:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1377:24:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 104,
                                            "name": "studentEmail",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 69,
                                            "src": "1404:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "1377:39:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 106,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1377:39:0"
                                },
                                {
                                    "expression": {
                                        "id": 111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 107,
                                                "name": "certificateIdByEmail",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 34,
                                                "src": "1422:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                                    "typeString": "mapping(string memory => uint256)"
                                                }
                                            },
                                            "id": 109,
                                            "indexExpression": {
                                                "id": 108,
                                                "name": "studentEmail",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 69,
                                                "src": "1443:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1422:34:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 110,
                                            "name": "certId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 81,
                                            "src": "1459:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1422:43:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 112,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1422:43:0"
                                },
                                {
                                    "expression": {
                                        "id": 114,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "1471:9:0",
                                        "subExpression": {
                                            "id": 113,
                                            "name": "tokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 36,
                                            "src": "1471:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 115,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1471:9:0"
                                }
                            ]
                        },
                        "functionSelector": "35318158",
                        "id": 117,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "issueCertificate",
                        "nameLocation": "838:16:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 72,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 63,
                                    "mutability": "mutable",
                                    "name": "studentName",
                                    "nameLocation": "872:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 117,
                                    "src": "858:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 62,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "858:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 65,
                                    "mutability": "mutable",
                                    "name": "institutionName",
                                    "nameLocation": "901:15:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 117,
                                    "src": "887:29:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 64,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "887:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 67,
                                    "mutability": "mutable",
                                    "name": "degree",
                                    "nameLocation": "934:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 117,
                                    "src": "920:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 66,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "920:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 69,
                                    "mutability": "mutable",
                                    "name": "studentEmail",
                                    "nameLocation": "958:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 117,
                                    "src": "944:26:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 68,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "944:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 71,
                                    "mutability": "mutable",
                                    "name": "cidHash",
                                    "nameLocation": "988:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 117,
                                    "src": "974:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 70,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "974:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "854:144:0"
                        },
                        "returnParameters": {
                            "id": 73,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1008:0:0"
                        },
                        "scope": 163,
                        "src": "829:655:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 161,
                            "nodeType": "Block",
                            "src": "1734:243:0",
                            "statements": [
                                {
                                    "assignments": [
                                        135
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 135,
                                            "mutability": "mutable",
                                            "name": "certId",
                                            "nameLocation": "1746:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 161,
                                            "src": "1738:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 134,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1738:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 139,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 136,
                                            "name": "certificateIdByEmail",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34,
                                            "src": "1755:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                                "typeString": "mapping(string memory => uint256)"
                                            }
                                        },
                                        "id": 138,
                                        "indexExpression": {
                                            "id": 137,
                                            "name": "studentEmail",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 119,
                                            "src": "1776:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1755:34:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1738:51:0"
                                },
                                {
                                    "assignments": [
                                        142
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 142,
                                            "mutability": "mutable",
                                            "name": "cert",
                                            "nameLocation": "1812:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 161,
                                            "src": "1793:23:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                "typeString": "struct Certificates.Certificate"
                                            },
                                            "typeName": {
                                                "id": 141,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 140,
                                                    "name": "Certificate",
                                                    "nameLocations": [
                                                        "1793:11:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 21,
                                                    "src": "1793:11:0"
                                                },
                                                "referencedDeclaration": 21,
                                                "src": "1793:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Certificate_$21_storage_ptr",
                                                    "typeString": "struct Certificates.Certificate"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 146,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 143,
                                            "name": "certificates",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 26,
                                            "src": "1819:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$21_storage_$",
                                                "typeString": "mapping(uint256 => struct Certificates.Certificate storage ref)"
                                            }
                                        },
                                        "id": 145,
                                        "indexExpression": {
                                            "id": 144,
                                            "name": "certId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 135,
                                            "src": "1832:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1819:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Certificate_$21_storage",
                                            "typeString": "struct Certificates.Certificate storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1793:46:0"
                                },
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "expression": {
                                                    "id": 147,
                                                    "name": "cert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 142,
                                                    "src": "1855:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                        "typeString": "struct Certificates.Certificate memory"
                                                    }
                                                },
                                                "id": 148,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1860:11:0",
                                                "memberName": "institution",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 6,
                                                "src": "1855:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 149,
                                                    "name": "cert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 142,
                                                    "src": "1876:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                        "typeString": "struct Certificates.Certificate memory"
                                                    }
                                                },
                                                "id": 150,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1881:15:0",
                                                "memberName": "institutionName",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 8,
                                                "src": "1876:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 151,
                                                    "name": "cert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 142,
                                                    "src": "1901:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                        "typeString": "struct Certificates.Certificate memory"
                                                    }
                                                },
                                                "id": 152,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1906:11:0",
                                                "memberName": "studentName",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 10,
                                                "src": "1901:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 153,
                                                    "name": "cert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 142,
                                                    "src": "1922:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                        "typeString": "struct Certificates.Certificate memory"
                                                    }
                                                },
                                                "id": 154,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1927:6:0",
                                                "memberName": "degree",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 14,
                                                "src": "1922:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 155,
                                                    "name": "cert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 142,
                                                    "src": "1938:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                        "typeString": "struct Certificates.Certificate memory"
                                                    }
                                                },
                                                "id": 156,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1943:7:0",
                                                "memberName": "cidHash",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 16,
                                                "src": "1938:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 157,
                                                    "name": "cert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 142,
                                                    "src": "1955:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Certificate_$21_memory_ptr",
                                                        "typeString": "struct Certificates.Certificate memory"
                                                    }
                                                },
                                                "id": 158,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1960:9:0",
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 20,
                                                "src": "1955:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 159,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "1850:123:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$",
                                            "typeString": "tuple(address,string memory,string memory,string memory,string memory,uint256)"
                                        }
                                    },
                                    "functionReturnParameters": 133,
                                    "id": 160,
                                    "nodeType": "Return",
                                    "src": "1843:130:0"
                                }
                            ]
                        },
                        "functionSelector": "3626c8fc",
                        "id": 162,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCertificateByStudentEmail",
                        "nameLocation": "1496:28:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 120,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 119,
                                    "mutability": "mutable",
                                    "name": "studentEmail",
                                    "nameLocation": "1539:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 162,
                                    "src": "1525:26:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 118,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1525:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1524:28:0"
                        },
                        "returnParameters": {
                            "id": 133,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 122,
                                    "mutability": "mutable",
                                    "name": "institution",
                                    "nameLocation": "1587:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 162,
                                    "src": "1579:19:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 121,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1579:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 124,
                                    "mutability": "mutable",
                                    "name": "institutionName",
                                    "nameLocation": "1616:15:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 162,
                                    "src": "1602:29:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 123,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1602:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 126,
                                    "mutability": "mutable",
                                    "name": "studentName",
                                    "nameLocation": "1649:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 162,
                                    "src": "1635:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 125,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1635:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 128,
                                    "mutability": "mutable",
                                    "name": "degree",
                                    "nameLocation": "1678:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 162,
                                    "src": "1664:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 127,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1664:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 130,
                                    "mutability": "mutable",
                                    "name": "cidHash",
                                    "nameLocation": "1702:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 162,
                                    "src": "1688:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 129,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1688:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 132,
                                    "mutability": "mutable",
                                    "name": "timestamp",
                                    "nameLocation": "1721:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 162,
                                    "src": "1713:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 131,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1713:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1575:158:0"
                        },
                        "scope": 163,
                        "src": "1487:490:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 164,
                "src": "189:1790:0",
                "usedErrors": [
                    2048,
                    2051,
                    2054,
                    2057,
                    2060,
                    2063,
                    2066,
                    2069,
                    2072,
                    2075,
                    2078,
                    2081,
                    2084
                ]
            }
        ],
        "src": "32:1948:0"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "batchFrozen(uint256)": "83040532",
        "batchMintTo(address,uint256,string,bytes)": "754a81d9",
        "burn(uint256)": "42966c68",
        "contractURI()": "e8a3d485",
        "getApproved(uint256)": "081812fc",
        "getBaseURICount()": "63b45e2d",
        "getBatchIdAtIndex(uint256)": "2419f51b",
        "getCertificateByStudentEmail(string)": "3626c8fc",
        "getDefaultRoyaltyInfo()": "b24f2d39",
        "getRoyaltyInfoForToken(uint256)": "4cc157df",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isApprovedOrOwner(address,uint256)": "430c2081",
        "issueCertificate(string,string,string,string,string)": "35318158",
        "mintTo(address,string)": "0075a317",
        "multicall(bytes[])": "ac9650d8",
        "name()": "06fdde03",
        "nextTokenIdToMint()": "3b1475a7",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "royaltyInfo(uint256,uint256)": "2a55205a",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setContractURI(string)": "938e3d7b",
        "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
        "setOwner(address)": "13af4035",
        "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "totalSupply()": "18160ddd",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2265000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2719",
            "batchFrozen(uint256)": "2506",
            "batchMintTo(address,uint256,string,bytes)": "infinite",
            "burn(uint256)": "infinite",
            "contractURI()": "infinite",
            "getApproved(uint256)": "6981",
            "getBaseURICount()": "2382",
            "getBatchIdAtIndex(uint256)": "6761",
            "getCertificateByStudentEmail(string)": "infinite",
            "getDefaultRoyaltyInfo()": "2431",
            "getRoyaltyInfoForToken(uint256)": "7024",
            "isApprovedForAll(address,address)": "infinite",
            "isApprovedOrOwner(address,uint256)": "infinite",
            "issueCertificate(string,string,string,string,string)": "infinite",
            "mintTo(address,string)": "infinite",
            "multicall(bytes[])": "infinite",
            "name()": "infinite",
            "nextTokenIdToMint()": "2337",
            "owner()": "2420",
            "ownerOf(uint256)": "infinite",
            "royaltyInfo(uint256,uint256)": "7221",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26714",
            "setContractURI(string)": "infinite",
            "setDefaultRoyaltyInfo(address,uint256)": "28383",
            "setOwner(address)": "28431",
            "setRoyaltyInfoForToken(uint256,address,uint256)": "51059",
            "supportsInterface(bytes4)": "634",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "totalSupply()": "4477",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}